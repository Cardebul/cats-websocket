version: "3.5"

volumes:
  pg_data:
  static:
  media:

services:
  db:
    image: postgres:13
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - webnet
    restart: on-failure

  redis:
    image: redis:latest
    networks: 
      - redisnet
    restart: on-failure

  django_wsgi:
    container_name: django_wsgi
    build: ./backend/
    command: uwsgi --socket=:9000 --module=service.wsgi:application --py-autoreload=1
    volumes:
      - static:/backend_static
      - media:/backend_media
    env_file: .env
    depends_on:
      - db
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks: 
      - webnet
      - redisnet
    links:
      - redis
    restart: on-failure
    
  
  django_asgi:
    container_name: django_asgi
    build: ./backend/
    env_file: .env
    # ssl:443:privateKey=key.pem:certKey=crt.pem service.asgi:application

    command: daphne -b 0.0.0.0 -p 8000 service.asgi:application
    volumes:
      - static:/backend_static
      - media:/backend_media
    depends_on:
      - db
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks: 
      - webnet
      - redisnet
    links:
      - redis
    restart: on-failure
  
  nginx:
    image: nginx:1.15.0
    env_file: .env
    depends_on:
      - django_asgi
      - django_wsgi
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static:/static
      - media:/backend_media
    networks:
      - webnet
    ports:
      - "80:80"
    restart: on-failure
  
  frontend:
    env_file: .env
    build: ./frontend/
    command: cp -r /app/build/. /static/
    
    volumes:
      - static:/static

networks: 
  webnet:
  redisnet: